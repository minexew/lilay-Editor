
/*
 * SettingsDialog.java
 *
 * Created on 16.5.2009, 22:16:57
 */

package lilay;

import javax.swing.JFileChooser;
import org.jdesktop.application.Action;

/**
 *
 * @author Minexewl
 */
public class SettingsDialog extends javax.swing.JDialog
{
    boolean ready = false;

    public SettingsDialog( java.awt.Frame parent )
    {
        super( parent, false );
        initComponents();
        
        encoderExe.setText( EditorSettings.instance.encoder );
        autoImportResources.setSelected( EditorSettings.instance.autoImportResources );
        
        ready = true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        encoderExe = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        autoImportResources = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(lilay.LilayEditorApp.class).getContext().getResourceMap(SettingsDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setIconImage(null);
        setIconImages(null);
        setLocationByPlatform(true);
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel1.setFont(resourceMap.getFont("uiFont")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        encoderExe.setFont(resourceMap.getFont("uiFont")); // NOI18N
        encoderExe.setText(resourceMap.getString("encoderExe.text")); // NOI18N
        encoderExe.setName("encoderExe"); // NOI18N
        encoderExe.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                encoderExePropertyChange(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(lilay.LilayEditorApp.class).getContext().getActionMap(SettingsDialog.class, this);
        jButton1.setAction(actionMap.get("browseEncoderExe")); // NOI18N
        jButton1.setFont(resourceMap.getFont("uiFont")); // NOI18N
        jButton1.setText(resourceMap.getString("browse")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        autoImportResources.setFont(resourceMap.getFont("uiFont")); // NOI18N
        autoImportResources.setText(resourceMap.getString("autoImportResources.text")); // NOI18N
        autoImportResources.setName("autoImportResources"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(encoderExe, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(autoImportResources))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(encoderExe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoImportResources)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encoderExePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_encoderExePropertyChange
        if ( ready )
        {
            EditorSettings.instance.encoder = encoderExe.getText();
            EditorSettings.instance.autoImportResources = autoImportResources.isSelected();
        }
    }//GEN-LAST:event_encoderExePropertyChange
    
    @Action public void browseEncoderExe()
    {
        JFileChooser chooser = new JFileChooser( encoderExe.getText() );
        if ( chooser.showOpenDialog( this ) == JFileChooser.APPROVE_OPTION )
            encoderExe.setText( chooser.getSelectedFile().getPath() );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoImportResources;
    private javax.swing.JTextField encoderExe;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
